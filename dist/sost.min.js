!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).sost=f()}}((function(){return function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,(function(r){return o(e[i][1][r]||r)}),p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(require,module,exports){const{form:form}=require("./math");class Camera{constructor(Canvas,theta=0,phi=0){this.Canvas=Canvas,this.angle=[theta,phi],this.center=[0,0,0],this.zoom=1}rotate(vec){return form.rotate(vec,-this.angle[0],-this.angle[1])}translate(vec){return form.subtract(vec,this.center)}scale(vec){return form.multiply(1/this.zoom,vec)}rotate_inv(vec){return form.rotate(vec,this.angle[0],this.angle[1])}translate_inv(vec){return form.add(vec,this.center)}scale_inv(vec){return form.multiply(this.zoom,vec)}}class PixelSpace{constructor(Canvas){this.Canvas=Canvas}fromPoint(point){let[x,_y,z]=point;return x+=this.Canvas.width/2,z+=this.Canvas.height/2,x*=this.Canvas.cwidth/this.Canvas.width,z*=this.Canvas.cheight/this.Canvas.height,z=this.Canvas.cheight-z,[x,z]}}class PointSpace{constructor(Canvas){this.Canvas=Canvas}fromCartesian(point){let nPoint=this.Canvas.Camera.rotate(point);return nPoint=this.Canvas.Camera.translate(nPoint),nPoint=this.Canvas.Camera.scale(nPoint),nPoint}}class CartesianSpace{constructor(Canvas){this.Canvas=Canvas}fromPoint(point){let nPoint=this.Canvas.Camera.scale_inv(point);return nPoint=this.Canvas.Camera.translate_inv(nPoint),nPoint=this.Canvas.Camera.rotate_inv(nPoint),nPoint}}module.exports={Canvas3D:class Canvas3D{constructor(ctx,w,h,d){this.ctx=ctx,this.cwidth=ctx.canvas.width,this.cheight=ctx.canvas.height,this.width=w,this.height=h,this.depth=d,this.init(),this.pointStyle="red",this.pointSize=2.5,this.strokeStyle="white",this.lineWidth=2.5,this.fillStyle="#4ca9d4",this.altFillStyle="#3f8cb0",this.stroke=!0,this.fill=!0}init(){this.ctx.fillRect(0,0,this.cwidth,this.cheight),this.Camera=new Camera(this),this.Pixel=new PixelSpace(this),this.Point=new PointSpace(this),this.Cartesian=new CartesianSpace(this)}clear(){this.ctx.clearRect(0,0,this.cwidth,this.cheight)}p_point(vec){let[x,y]=this.Pixel.fromPoint(vec);this.ctx.beginPath(),this.ctx.arc(x,y,this.pointSize,0,2*Math.PI),this.ctx.fillStyle=this.pointStyle,this.ctx.fill()}p_line(u,v){let[x1,y1]=this.Pixel.fromPoint(u),[x2,y2]=this.Pixel.fromPoint(v);this.ctx.beginPath(),this.ctx.moveTo(x1,y1),this.ctx.lineTo(x2,y2),this.ctx.strokeStyle=this.strokeStyle,this.ctx.lineWidth=this.lineWidth,this.ctx.stroke()}p_polygon(points){let nPoints=[];for(let point of points)nPoints.push(this.Pixel.fromPoint(point));this.ctx.beginPath(),this.ctx.moveTo(nPoints[0][0],nPoints[0][1]);for(let i=1;i<nPoints.length;i++)this.ctx.lineTo(nPoints[i][0],nPoints[i][1]);this.ctx.closePath(),this.fill&&(this.ctx.fillStyle=this.fillStyle,this.ctx.fill()),this.stroke&&(this.ctx.strokeStyle=this.strokeStyle,this.ctx.lineWidth=this.lineWidth,this.ctx.stroke())}point(vec){let p_vec=this.Point.fromCartesian(vec);this.p_point(p_vec)}line(u,v){let p_u=this.Point.fromCartesian(u),p_v=this.Point.fromCartesian(v);this.p_line(p_u,p_v)}polygon(points){let p_points=[];for(let point of points)p_points.push(this.Point.fromCartesian(point));this.p_polygon(p_points)}},Camera:Camera,PixelSpace:PixelSpace,PointSpace:PointSpace,CartesianSpace:CartesianSpace}},{"./math":3}],2:[function(require,module,exports){const rotateYZ=(vec,theta)=>{let[x,y,z]=vec;const cosTheta=Math.cos(theta),sinTheta=Math.sin(theta);return[x,y*cosTheta-z*sinTheta,y*sinTheta+z*cosTheta]},rotateXY=(vec,theta)=>{let[x,y,z]=vec;const cosTheta=Math.cos(theta),sinTheta=Math.sin(theta);return[x*cosTheta-y*sinTheta,x*sinTheta+y*cosTheta,z]};module.exports={rotateXZ:(vec,theta)=>{let[x,y,z]=vec;const cosTheta=Math.cos(theta),sinTheta=Math.sin(theta);return[x*cosTheta-z*sinTheta,y,x*sinTheta+z*cosTheta]},rotateYZ:rotateYZ,rotateXY:rotateXY,rotate:(vec,theta,phi)=>{let nVec=rotateXY(vec,theta);return nVec=rotateYZ(nVec,phi),nVec},add:(u,v)=>{let[u_x,u_y,u_z]=u,[v_x,v_y,v_z]=v;return[u_x+v_x,u_y+v_y,u_z+v_z]},subtract:(u,v)=>{let[u_x,u_y,u_z]=u,[v_x,v_y,v_z]=v;return[u_x-v_x,u_y-v_y,u_z-v_z]},multiply:(k,u)=>{let[u_x,u_y,u_z]=u;return[k*u_x,k*u_y,k*u_z]}}},{}],3:[function(require,module,exports){const form=require("./form");module.exports={form:form}},{"./form":2}],4:[function(require,module,exports){const core=require("./core"),{Canvas3D:Canvas3D}=core;module.exports={Canvas3D:Canvas3D,core:core,version:"v0.1.0"}},{"./core":1}]},{},[4])(4)}));